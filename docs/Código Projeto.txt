#include <Blynk.h>
#include <BlynkSimpleStream.h>

#include <FastIO.h>
#include <I2CIO.h>
#include <LCD.h>
#include <LiquidCrystal.h>
#include <LiquidCrystal_I2C.h>
#include <LiquidCrystal_SR.h>
#include <LiquidCrystal_SR2W.h>
#include <LiquidCrystal_SR3W.h>
#include <BlynkSimpleStream.h>
#include <Wire.h>
#include <OneWire.h>
#include <DallasTemperature.h> 
#include <SoftwareSerial.h>
#include <LiquidCrystal_I2C.h>
#define ONE_WIRE_BUS 3
#define BLYNK_PRINT SwSerial


SoftwareSerial SwSerial(10, 11); // RX, TX
    

// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)
OneWire oneWire(ONE_WIRE_BUS);
// Pass our oneWire reference to Dallas Temperature. 
DallasTemperature sensors(&oneWire);
LiquidCrystal_I2C lcd(0x27, 2, 1, 0, 4, 5, 6, 7, 3, POSITIVE);  // Set the LCD I2C address

//Codigo Celular Gustavo: e9eef5c379d04bf5801021b17e04dfc3
//Codigo Celular Diego: b96f44be9b8e4c21b4e615c38f1c6973
char auth[] = "b96f44be9b8e4c21b4e615c38f1c6973";

int IN1 = 11;
int IN2 = 6;
int IN3 = 5;
int IN4 = 10;

void setup()  
{   

  //Define os pinos como saida
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);   

  // start serial port
  //  Serial.begin(9600);
  //  Serial.println("Dallas Temperature IC Control Library Demo");
  // Start up the library
  sensors.begin();
  lcd.begin(16,2);
  lcd.backlight(); 
  lcd.clear();
  lcd.setCursor(0,0);

  // Debug console
  SwSerial.begin(9600);

  // Blynk will work through Serial
  // Do not read or write this serial manually in your sketch
  Serial.begin(9600);
  Blynk.begin(Serial, auth);

}

void loop() {  

   Blynk.run();  
}

// Attach virtual serial terminal to Virtual Pin V1
WidgetTerminal terminal(V3);

// You can send commands from Terminal to your hardware. Just use
// the same Virtual Pin as your Terminal Widget
BLYNK_WRITE(V3)
{

  // if you type "Marco" into Terminal Widget - it will respond: "Polo:"
  if (String("Marco") == param.asStr()) {
    terminal.println("You said: 'Marco'") ;
    terminal.println("I said: 'Polo'") ;
  } else {

    // Send it back
    terminal.print("You said:");
    terminal.write(param.getBuffer(), param.getLength());
    terminal.println();
  }

  // Ensure everything is sent
  terminal.flush();
}

    // Botão - Derrama Malte
BLYNK_WRITE(V10){
   //Gira o Motor A
   digitalWrite(IN1, HIGH);
   digitalWrite(IN2, LOW);
   delay(2000);
   //Para o motor A
   digitalWrite(IN1, HIGH);
   digitalWrite(IN2, HIGH);
   delay(500);
  }
  
    //Botão - Mexer Mosto
BLYNK_WRITE(V5){
   //Gira o Motor B
   digitalWrite(IN3, HIGH);
   digitalWrite(IN4, LOW);
   delay(2000);
   //Para o motor B
   digitalWrite(IN3, HIGH);
   digitalWrite(IN4, HIGH);
   delay(500);
   }

   //Botão - Mostra Temperatura
BLYNK_WRITE(V2){
     sensors.requestTemperatures(); // Send the command to get temperatures
     // Serial.print("Temperature for the device 1 (index 0) is: ");
     float x = sensors.getTempCByIndex(0);
     //  Serial.println(x);
     lcd.setCursor(0,0);
     lcd.print("Temperature: ");
     lcd.setCursor(0,1);
     lcd.print("          ");
     lcd.setCursor(0,1);
     lcd.print(x);

     delay(3000);
}
